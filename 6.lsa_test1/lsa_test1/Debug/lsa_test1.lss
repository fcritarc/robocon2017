
lsa_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000672  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000061e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000672  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000006e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010e5  00000000  00000000  0000072c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c99  00000000  00000000  00001811  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000557  00000000  00000000  000024aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  00002a04  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000613  00000000  00000000  00002a98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000023b  00000000  00000000  000030ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000032e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	a2 d0       	rcall	.+324    	; 0x23a <main>
  f6:	91 c2       	rjmp	.+1314   	; 0x61a <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <_Z7lcdinitv>:


void lcdinit()
{
	int i;
	PORTC &= 0x80 ;
  fa:	88 b1       	in	r24, 0x08	; 8
  fc:	80 78       	andi	r24, 0x80	; 128
  fe:	88 b9       	out	0x08, r24	; 8
	cbit(PORTC,RS);
 100:	40 98       	cbi	0x08, 0	; 8
	cbit(PORTC,RW);
 102:	41 98       	cbi	0x08, 1	; 8
	PORTC = 0x30;
 104:	80 e3       	ldi	r24, 0x30	; 48
 106:	88 b9       	out	0x08, r24	; 8
 108:	83 e0       	ldi	r24, 0x03	; 3
 10a:	90 e0       	ldi	r25, 0x00	; 0
	for(i=0;i<=2;i++)
	{
		
		
		sbit(PORTC,EN);
 10c:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10e:	ef ef       	ldi	r30, 0xFF	; 255
 110:	f7 e4       	ldi	r31, 0x47	; 71
 112:	31 97       	sbiw	r30, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <_Z7lcdinitv+0x18>
 116:	00 c0       	rjmp	.+0      	; 0x118 <_Z7lcdinitv+0x1e>
 118:	00 00       	nop
		_delay_ms(5);
		cbit(PORTC,EN);
 11a:	42 98       	cbi	0x08, 2	; 8
 11c:	e6 e6       	ldi	r30, 0x66	; 102
 11e:	fe e0       	ldi	r31, 0x0E	; 14
 120:	31 97       	sbiw	r30, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <_Z7lcdinitv+0x26>
 124:	00 00       	nop
 126:	01 97       	sbiw	r24, 0x01	; 1
	int i;
	PORTC &= 0x80 ;
	cbit(PORTC,RS);
	cbit(PORTC,RW);
	PORTC = 0x30;
	for(i=0;i<=2;i++)
 128:	89 f7       	brne	.-30     	; 0x10c <_Z7lcdinitv+0x12>
		_delay_ms(5);
		cbit(PORTC,EN);
		_delay_ms(1);
	}
	
	PORTC = 0x20;
 12a:	80 e2       	ldi	r24, 0x20	; 32
 12c:	88 b9       	out	0x08, r24	; 8
	sbit(PORTC,EN);
 12e:	42 9a       	sbi	0x08, 2	; 8
 130:	8f ef       	ldi	r24, 0xFF	; 255
 132:	97 e4       	ldi	r25, 0x47	; 71
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <_Z7lcdinitv+0x3a>
 138:	00 c0       	rjmp	.+0      	; 0x13a <_Z7lcdinitv+0x40>
 13a:	00 00       	nop
	_delay_ms(5);
	cbit(PORTC,EN);
 13c:	42 98       	cbi	0x08, 2	; 8
 13e:	e6 e6       	ldi	r30, 0x66	; 102
 140:	fe e0       	ldi	r31, 0x0E	; 14
 142:	31 97       	sbiw	r30, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <_Z7lcdinitv+0x48>
 146:	00 00       	nop
 148:	08 95       	ret

0000014a <_Z7commandh>:
void command(unsigned char cmd)
{
	unsigned char temp;
	temp=cmd;
	temp=temp & 0xF0;
	PORTC &= 0x0F;
 14a:	98 b1       	in	r25, 0x08	; 8
 14c:	9f 70       	andi	r25, 0x0F	; 15
 14e:	98 b9       	out	0x08, r25	; 8
	PORTC |= temp;
 150:	98 b1       	in	r25, 0x08	; 8

void command(unsigned char cmd)
{
	unsigned char temp;
	temp=cmd;
	temp=temp & 0xF0;
 152:	28 2f       	mov	r18, r24
 154:	20 7f       	andi	r18, 0xF0	; 240
	PORTC &= 0x0F;
	PORTC |= temp;
 156:	92 2b       	or	r25, r18
 158:	98 b9       	out	0x08, r25	; 8
	cbit(PORTC,RS);
 15a:	40 98       	cbi	0x08, 0	; 8
	cbit(PORTC,RW);
 15c:	41 98       	cbi	0x08, 1	; 8
	sbit(PORTC,EN);
 15e:	42 9a       	sbi	0x08, 2	; 8
 160:	ef ef       	ldi	r30, 0xFF	; 255
 162:	f7 e4       	ldi	r31, 0x47	; 71
 164:	31 97       	sbiw	r30, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <_Z7commandh+0x1a>
 168:	00 c0       	rjmp	.+0      	; 0x16a <_Z7commandh+0x20>
 16a:	00 00       	nop
	_delay_ms(5);
	cbit(PORTC,EN);
 16c:	42 98       	cbi	0x08, 2	; 8
	
	temp=cmd;
	temp=temp & 0x0F;
	temp= temp<<4;
	PORTC &= 0x0F;
 16e:	98 b1       	in	r25, 0x08	; 8
 170:	9f 70       	andi	r25, 0x0F	; 15
 172:	98 b9       	out	0x08, r25	; 8
	PORTC |= temp;
 174:	98 b1       	in	r25, 0x08	; 8
	_delay_ms(5);
	cbit(PORTC,EN);
	
	temp=cmd;
	temp=temp & 0x0F;
	temp= temp<<4;
 176:	82 95       	swap	r24
 178:	80 7f       	andi	r24, 0xF0	; 240
	PORTC &= 0x0F;
	PORTC |= temp;
 17a:	89 2b       	or	r24, r25
 17c:	88 b9       	out	0x08, r24	; 8
	//cbit(PORTC,RS);
	//cbit(PORTC,RW);
	sbit(PORTC,EN);
 17e:	42 9a       	sbi	0x08, 2	; 8
 180:	8f ef       	ldi	r24, 0xFF	; 255
 182:	97 e4       	ldi	r25, 0x47	; 71
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <_Z7commandh+0x3a>
 188:	00 c0       	rjmp	.+0      	; 0x18a <_Z7commandh+0x40>
 18a:	00 00       	nop
	_delay_ms(5);
	cbit(PORTC,EN);
 18c:	42 98       	cbi	0x08, 2	; 8
 18e:	08 95       	ret

00000190 <_Z8lcdsetupv>:
}

void lcdsetup()
{
	//command(0x28);	//4 bit 2 row
	command(0x01);	//clr scr
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	db df       	rcall	.-74     	; 0x14a <_Z7commandh>
	command(0x06);	//cursor right shift
 194:	86 e0       	ldi	r24, 0x06	; 6
 196:	d9 df       	rcall	.-78     	; 0x14a <_Z7commandh>
	command(0x0E);	//cursor blink display on
 198:	8e e0       	ldi	r24, 0x0E	; 14
 19a:	d7 df       	rcall	.-82     	; 0x14a <_Z7commandh>
	command(0x80);	//force cursor to 1 row 0 col
 19c:	80 e8       	ldi	r24, 0x80	; 128
 19e:	d5 cf       	rjmp	.-86     	; 0x14a <_Z7commandh>
 1a0:	08 95       	ret

000001a2 <_Z6putchac>:
void putcha(char a)
{
	unsigned char temp;
	temp=a;
	temp=temp & 0xF0;
	PORTC &= 0x0F;
 1a2:	98 b1       	in	r25, 0x08	; 8
 1a4:	9f 70       	andi	r25, 0x0F	; 15
 1a6:	98 b9       	out	0x08, r25	; 8
	PORTC |= temp;
 1a8:	98 b1       	in	r25, 0x08	; 8

void putcha(char a)
{
	unsigned char temp;
	temp=a;
	temp=temp & 0xF0;
 1aa:	28 2f       	mov	r18, r24
 1ac:	20 7f       	andi	r18, 0xF0	; 240
	PORTC &= 0x0F;
	PORTC |= temp;
 1ae:	92 2b       	or	r25, r18
 1b0:	98 b9       	out	0x08, r25	; 8
	sbit(PORTC,RS);
 1b2:	40 9a       	sbi	0x08, 0	; 8
	cbit(PORTC,RW);
 1b4:	41 98       	cbi	0x08, 1	; 8
	sbit(PORTC,EN);
 1b6:	42 9a       	sbi	0x08, 2	; 8
 1b8:	ef ef       	ldi	r30, 0xFF	; 255
 1ba:	f7 e4       	ldi	r31, 0x47	; 71
 1bc:	31 97       	sbiw	r30, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <_Z6putchac+0x1a>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <_Z6putchac+0x20>
 1c2:	00 00       	nop
	_delay_ms(5);
	cbit(PORTC,EN);
 1c4:	42 98       	cbi	0x08, 2	; 8
	
	temp=a;
	temp=temp & 0x0F;
	temp=temp<<4;
	PORTC &= 0x0F;
 1c6:	98 b1       	in	r25, 0x08	; 8
 1c8:	9f 70       	andi	r25, 0x0F	; 15
 1ca:	98 b9       	out	0x08, r25	; 8
	PORTC |= temp;
 1cc:	98 b1       	in	r25, 0x08	; 8
	_delay_ms(5);
	cbit(PORTC,EN);
	
	temp=a;
	temp=temp & 0x0F;
	temp=temp<<4;
 1ce:	82 95       	swap	r24
 1d0:	80 7f       	andi	r24, 0xF0	; 240
	PORTC &= 0x0F;
	PORTC |= temp;
 1d2:	89 2b       	or	r24, r25
 1d4:	88 b9       	out	0x08, r24	; 8
	//sbit(PORTC,RS);
	//cbit(PORTC,RW);
	sbit(PORTC,EN);
 1d6:	42 9a       	sbi	0x08, 2	; 8
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	97 e4       	ldi	r25, 0x47	; 71
 1dc:	01 97       	sbiw	r24, 0x01	; 1
 1de:	f1 f7       	brne	.-4      	; 0x1dc <_Z6putchac+0x3a>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <_Z6putchac+0x40>
 1e2:	00 00       	nop
	_delay_ms(5);
	cbit(PORTC,EN);
 1e4:	42 98       	cbi	0x08, 2	; 8
 1e6:	08 95       	ret

000001e8 <_Z6putinti>:
	
}
void putint(int x)
{	int count=0;
 1e8:	ef 92       	push	r14
 1ea:	ff 92       	push	r15
 1ec:	0f 93       	push	r16
 1ee:	1f 93       	push	r17
 1f0:	cf 93       	push	r28
 1f2:	df 93       	push	r29
 1f4:	d8 2f       	mov	r29, r24
 1f6:	c9 2f       	mov	r28, r25
	command(0x85);
 1f8:	85 e8       	ldi	r24, 0x85	; 133
 1fa:	a7 df       	rcall	.-178    	; 0x14a <_Z7commandh>
	command(0x04);
 1fc:	84 e0       	ldi	r24, 0x04	; 4
 1fe:	a5 df       	rcall	.-182    	; 0x14a <_Z7commandh>
 200:	04 e0       	ldi	r16, 0x04	; 4
 202:	10 e0       	ldi	r17, 0x00	; 0
	while(count!=4)
	{
		putcha((x%10)+48);
 204:	0f 2e       	mov	r0, r31
 206:	fa e0       	ldi	r31, 0x0A	; 10
 208:	ef 2e       	mov	r14, r31
 20a:	f1 2c       	mov	r15, r1
 20c:	f0 2d       	mov	r31, r0
 20e:	8d 2f       	mov	r24, r29
 210:	9c 2f       	mov	r25, r28
 212:	b7 01       	movw	r22, r14
 214:	db d1       	rcall	.+950    	; 0x5cc <__divmodhi4>
 216:	d6 2f       	mov	r29, r22
 218:	c7 2f       	mov	r28, r23
 21a:	80 5d       	subi	r24, 0xD0	; 208
 21c:	c2 df       	rcall	.-124    	; 0x1a2 <_Z6putchac>
 21e:	01 50       	subi	r16, 0x01	; 1
 220:	11 09       	sbc	r17, r1
}
void putint(int x)
{	int count=0;
	command(0x85);
	command(0x04);
	while(count!=4)
 222:	a9 f7       	brne	.-22     	; 0x20e <_Z6putinti+0x26>
		putcha((x%10)+48);
		x=x/10;
		count++;
		
	}
	command(0x80);
 224:	80 e8       	ldi	r24, 0x80	; 128
 226:	91 df       	rcall	.-222    	; 0x14a <_Z7commandh>
	command(0x06);
 228:	86 e0       	ldi	r24, 0x06	; 6
 22a:	8f df       	rcall	.-226    	; 0x14a <_Z7commandh>
	
}
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	1f 91       	pop	r17
 232:	0f 91       	pop	r16
 234:	ff 90       	pop	r15
 236:	ef 90       	pop	r14
 238:	08 95       	ret

0000023a <main>:
int main(void)
{	DDRC = 0xFF;
 23a:	8f ef       	ldi	r24, 0xFF	; 255
 23c:	87 b9       	out	0x07, r24	; 7
	DDRF = 0x00;
 23e:	10 ba       	out	0x10, r1	; 16
	lcdinit();
 240:	5c df       	rcall	.-328    	; 0xfa <_Z7lcdinitv>
	lcdsetup();
 242:	a6 df       	rcall	.-180    	; 0x190 <_Z8lcdsetupv>
	ADMUX = (1<<REFS0) | (1<<MUX0) | (1<<MUX1) | (1<<ADLAR);
 244:	83 e6       	ldi	r24, 0x63	; 99
 246:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x70007c>
	ADCSRA = (1<<ADEN) | (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADATE) | (1<<ADSC);
 24a:	87 ee       	ldi	r24, 0xE7	; 231
 24c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x70007a>
	int y;
    /* Replace with your application code */
    while (1) 
    {
		y=ADCL;
 250:	08 e7       	ldi	r16, 0x78	; 120
 252:	10 e0       	ldi	r17, 0x00	; 0
		y=(ADCH<<2) | y;
 254:	c9 e7       	ldi	r28, 0x79	; 121
 256:	d0 e0       	ldi	r29, 0x00	; 0
	ADCSRA = (1<<ADEN) | (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADATE) | (1<<ADSC);
	int y;
    /* Replace with your application code */
    while (1) 
    {
		y=ADCL;
 258:	f8 01       	movw	r30, r16
 25a:	80 81       	ld	r24, Z
		y=(ADCH<<2) | y;
 25c:	68 81       	ld	r22, Y
 25e:	70 e0       	ldi	r23, 0x00	; 0
 260:	66 0f       	add	r22, r22
 262:	77 1f       	adc	r23, r23
 264:	66 0f       	add	r22, r22
 266:	77 1f       	adc	r23, r23
 268:	68 2b       	or	r22, r24
		y = ((float(y)/921)*70);
 26a:	07 2e       	mov	r0, r23
 26c:	00 0c       	add	r0, r0
 26e:	88 0b       	sbc	r24, r24
 270:	99 0b       	sbc	r25, r25
 272:	bd d0       	rcall	.+378    	; 0x3ee <__floatsisf>
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e4       	ldi	r19, 0x40	; 64
 278:	46 e6       	ldi	r20, 0x66	; 102
 27a:	54 e4       	ldi	r21, 0x44	; 68
 27c:	1d d0       	rcall	.+58     	; 0x2b8 <__divsf3>
 27e:	20 e0       	ldi	r18, 0x00	; 0
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	4c e8       	ldi	r20, 0x8C	; 140
 284:	52 e4       	ldi	r21, 0x42	; 66
 286:	3f d1       	rcall	.+638    	; 0x506 <__mulsf3>
 288:	7f d0       	rcall	.+254    	; 0x388 <__fixsfsi>
		putint(y);
 28a:	cb 01       	movw	r24, r22
 28c:	ad df       	rcall	.-166    	; 0x1e8 <_Z6putinti>
 28e:	ff ef       	ldi	r31, 0xFF	; 255
 290:	2f ef       	ldi	r18, 0xFF	; 255
 292:	8c e2       	ldi	r24, 0x2C	; 44
 294:	f1 50       	subi	r31, 0x01	; 1
 296:	20 40       	sbci	r18, 0x00	; 0
 298:	80 40       	sbci	r24, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0x5a>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0x64>
 29e:	00 00       	nop
		_delay_ms(1000);
		if((PINF&0x10)==0x10)
 2a0:	7c 9b       	sbis	0x0f, 4	; 15
 2a2:	05 c0       	rjmp	.+10     	; 0x2ae <main+0x74>
		{
			command(0x86);
 2a4:	86 e8       	ldi	r24, 0x86	; 134
 2a6:	51 df       	rcall	.-350    	; 0x14a <_Z7commandh>
			putcha('j');
 2a8:	8a e6       	ldi	r24, 0x6A	; 106
 2aa:	7b df       	rcall	.-266    	; 0x1a2 <_Z6putchac>
 2ac:	d5 cf       	rjmp	.-86     	; 0x258 <main+0x1e>
			
		}
		else
		{
			command(0x86);
 2ae:	86 e8       	ldi	r24, 0x86	; 134
 2b0:	4c df       	rcall	.-360    	; 0x14a <_Z7commandh>
			putcha(' ');
 2b2:	80 e2       	ldi	r24, 0x20	; 32
 2b4:	76 df       	rcall	.-276    	; 0x1a2 <_Z6putchac>
 2b6:	d0 cf       	rjmp	.-96     	; 0x258 <main+0x1e>

000002b8 <__divsf3>:
 2b8:	0c d0       	rcall	.+24     	; 0x2d2 <__divsf3x>
 2ba:	eb c0       	rjmp	.+470    	; 0x492 <__fp_round>
 2bc:	e3 d0       	rcall	.+454    	; 0x484 <__fp_pscB>
 2be:	40 f0       	brcs	.+16     	; 0x2d0 <__divsf3+0x18>
 2c0:	da d0       	rcall	.+436    	; 0x476 <__fp_pscA>
 2c2:	30 f0       	brcs	.+12     	; 0x2d0 <__divsf3+0x18>
 2c4:	21 f4       	brne	.+8      	; 0x2ce <__divsf3+0x16>
 2c6:	5f 3f       	cpi	r21, 0xFF	; 255
 2c8:	19 f0       	breq	.+6      	; 0x2d0 <__divsf3+0x18>
 2ca:	cc c0       	rjmp	.+408    	; 0x464 <__fp_inf>
 2cc:	51 11       	cpse	r21, r1
 2ce:	15 c1       	rjmp	.+554    	; 0x4fa <__fp_szero>
 2d0:	cf c0       	rjmp	.+414    	; 0x470 <__fp_nan>

000002d2 <__divsf3x>:
 2d2:	f0 d0       	rcall	.+480    	; 0x4b4 <__fp_split3>
 2d4:	98 f3       	brcs	.-26     	; 0x2bc <__divsf3+0x4>

000002d6 <__divsf3_pse>:
 2d6:	99 23       	and	r25, r25
 2d8:	c9 f3       	breq	.-14     	; 0x2cc <__divsf3+0x14>
 2da:	55 23       	and	r21, r21
 2dc:	b1 f3       	breq	.-20     	; 0x2ca <__divsf3+0x12>
 2de:	95 1b       	sub	r25, r21
 2e0:	55 0b       	sbc	r21, r21
 2e2:	bb 27       	eor	r27, r27
 2e4:	aa 27       	eor	r26, r26
 2e6:	62 17       	cp	r22, r18
 2e8:	73 07       	cpc	r23, r19
 2ea:	84 07       	cpc	r24, r20
 2ec:	38 f0       	brcs	.+14     	; 0x2fc <__divsf3_pse+0x26>
 2ee:	9f 5f       	subi	r25, 0xFF	; 255
 2f0:	5f 4f       	sbci	r21, 0xFF	; 255
 2f2:	22 0f       	add	r18, r18
 2f4:	33 1f       	adc	r19, r19
 2f6:	44 1f       	adc	r20, r20
 2f8:	aa 1f       	adc	r26, r26
 2fa:	a9 f3       	breq	.-22     	; 0x2e6 <__divsf3_pse+0x10>
 2fc:	33 d0       	rcall	.+102    	; 0x364 <__divsf3_pse+0x8e>
 2fe:	0e 2e       	mov	r0, r30
 300:	3a f0       	brmi	.+14     	; 0x310 <__divsf3_pse+0x3a>
 302:	e0 e8       	ldi	r30, 0x80	; 128
 304:	30 d0       	rcall	.+96     	; 0x366 <__divsf3_pse+0x90>
 306:	91 50       	subi	r25, 0x01	; 1
 308:	50 40       	sbci	r21, 0x00	; 0
 30a:	e6 95       	lsr	r30
 30c:	00 1c       	adc	r0, r0
 30e:	ca f7       	brpl	.-14     	; 0x302 <__divsf3_pse+0x2c>
 310:	29 d0       	rcall	.+82     	; 0x364 <__divsf3_pse+0x8e>
 312:	fe 2f       	mov	r31, r30
 314:	27 d0       	rcall	.+78     	; 0x364 <__divsf3_pse+0x8e>
 316:	66 0f       	add	r22, r22
 318:	77 1f       	adc	r23, r23
 31a:	88 1f       	adc	r24, r24
 31c:	bb 1f       	adc	r27, r27
 31e:	26 17       	cp	r18, r22
 320:	37 07       	cpc	r19, r23
 322:	48 07       	cpc	r20, r24
 324:	ab 07       	cpc	r26, r27
 326:	b0 e8       	ldi	r27, 0x80	; 128
 328:	09 f0       	breq	.+2      	; 0x32c <__divsf3_pse+0x56>
 32a:	bb 0b       	sbc	r27, r27
 32c:	80 2d       	mov	r24, r0
 32e:	bf 01       	movw	r22, r30
 330:	ff 27       	eor	r31, r31
 332:	93 58       	subi	r25, 0x83	; 131
 334:	5f 4f       	sbci	r21, 0xFF	; 255
 336:	2a f0       	brmi	.+10     	; 0x342 <__divsf3_pse+0x6c>
 338:	9e 3f       	cpi	r25, 0xFE	; 254
 33a:	51 05       	cpc	r21, r1
 33c:	68 f0       	brcs	.+26     	; 0x358 <__divsf3_pse+0x82>
 33e:	92 c0       	rjmp	.+292    	; 0x464 <__fp_inf>
 340:	dc c0       	rjmp	.+440    	; 0x4fa <__fp_szero>
 342:	5f 3f       	cpi	r21, 0xFF	; 255
 344:	ec f3       	brlt	.-6      	; 0x340 <__divsf3_pse+0x6a>
 346:	98 3e       	cpi	r25, 0xE8	; 232
 348:	dc f3       	brlt	.-10     	; 0x340 <__divsf3_pse+0x6a>
 34a:	86 95       	lsr	r24
 34c:	77 95       	ror	r23
 34e:	67 95       	ror	r22
 350:	b7 95       	ror	r27
 352:	f7 95       	ror	r31
 354:	9f 5f       	subi	r25, 0xFF	; 255
 356:	c9 f7       	brne	.-14     	; 0x34a <__divsf3_pse+0x74>
 358:	88 0f       	add	r24, r24
 35a:	91 1d       	adc	r25, r1
 35c:	96 95       	lsr	r25
 35e:	87 95       	ror	r24
 360:	97 f9       	bld	r25, 7
 362:	08 95       	ret
 364:	e1 e0       	ldi	r30, 0x01	; 1
 366:	66 0f       	add	r22, r22
 368:	77 1f       	adc	r23, r23
 36a:	88 1f       	adc	r24, r24
 36c:	bb 1f       	adc	r27, r27
 36e:	62 17       	cp	r22, r18
 370:	73 07       	cpc	r23, r19
 372:	84 07       	cpc	r24, r20
 374:	ba 07       	cpc	r27, r26
 376:	20 f0       	brcs	.+8      	; 0x380 <__divsf3_pse+0xaa>
 378:	62 1b       	sub	r22, r18
 37a:	73 0b       	sbc	r23, r19
 37c:	84 0b       	sbc	r24, r20
 37e:	ba 0b       	sbc	r27, r26
 380:	ee 1f       	adc	r30, r30
 382:	88 f7       	brcc	.-30     	; 0x366 <__divsf3_pse+0x90>
 384:	e0 95       	com	r30
 386:	08 95       	ret

00000388 <__fixsfsi>:
 388:	04 d0       	rcall	.+8      	; 0x392 <__fixunssfsi>
 38a:	68 94       	set
 38c:	b1 11       	cpse	r27, r1
 38e:	b5 c0       	rjmp	.+362    	; 0x4fa <__fp_szero>
 390:	08 95       	ret

00000392 <__fixunssfsi>:
 392:	98 d0       	rcall	.+304    	; 0x4c4 <__fp_splitA>
 394:	88 f0       	brcs	.+34     	; 0x3b8 <__fixunssfsi+0x26>
 396:	9f 57       	subi	r25, 0x7F	; 127
 398:	90 f0       	brcs	.+36     	; 0x3be <__fixunssfsi+0x2c>
 39a:	b9 2f       	mov	r27, r25
 39c:	99 27       	eor	r25, r25
 39e:	b7 51       	subi	r27, 0x17	; 23
 3a0:	a0 f0       	brcs	.+40     	; 0x3ca <__fixunssfsi+0x38>
 3a2:	d1 f0       	breq	.+52     	; 0x3d8 <__fixunssfsi+0x46>
 3a4:	66 0f       	add	r22, r22
 3a6:	77 1f       	adc	r23, r23
 3a8:	88 1f       	adc	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	1a f0       	brmi	.+6      	; 0x3b4 <__fixunssfsi+0x22>
 3ae:	ba 95       	dec	r27
 3b0:	c9 f7       	brne	.-14     	; 0x3a4 <__fixunssfsi+0x12>
 3b2:	12 c0       	rjmp	.+36     	; 0x3d8 <__fixunssfsi+0x46>
 3b4:	b1 30       	cpi	r27, 0x01	; 1
 3b6:	81 f0       	breq	.+32     	; 0x3d8 <__fixunssfsi+0x46>
 3b8:	9f d0       	rcall	.+318    	; 0x4f8 <__fp_zero>
 3ba:	b1 e0       	ldi	r27, 0x01	; 1
 3bc:	08 95       	ret
 3be:	9c c0       	rjmp	.+312    	; 0x4f8 <__fp_zero>
 3c0:	67 2f       	mov	r22, r23
 3c2:	78 2f       	mov	r23, r24
 3c4:	88 27       	eor	r24, r24
 3c6:	b8 5f       	subi	r27, 0xF8	; 248
 3c8:	39 f0       	breq	.+14     	; 0x3d8 <__fixunssfsi+0x46>
 3ca:	b9 3f       	cpi	r27, 0xF9	; 249
 3cc:	cc f3       	brlt	.-14     	; 0x3c0 <__fixunssfsi+0x2e>
 3ce:	86 95       	lsr	r24
 3d0:	77 95       	ror	r23
 3d2:	67 95       	ror	r22
 3d4:	b3 95       	inc	r27
 3d6:	d9 f7       	brne	.-10     	; 0x3ce <__fixunssfsi+0x3c>
 3d8:	3e f4       	brtc	.+14     	; 0x3e8 <__fixunssfsi+0x56>
 3da:	90 95       	com	r25
 3dc:	80 95       	com	r24
 3de:	70 95       	com	r23
 3e0:	61 95       	neg	r22
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	8f 4f       	sbci	r24, 0xFF	; 255
 3e6:	9f 4f       	sbci	r25, 0xFF	; 255
 3e8:	08 95       	ret

000003ea <__floatunsisf>:
 3ea:	e8 94       	clt
 3ec:	09 c0       	rjmp	.+18     	; 0x400 <__LOCK_REGION_LENGTH__>

000003ee <__floatsisf>:
 3ee:	97 fb       	bst	r25, 7
 3f0:	3e f4       	brtc	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	90 95       	com	r25
 3f4:	80 95       	com	r24
 3f6:	70 95       	com	r23
 3f8:	61 95       	neg	r22
 3fa:	7f 4f       	sbci	r23, 0xFF	; 255
 3fc:	8f 4f       	sbci	r24, 0xFF	; 255
 3fe:	9f 4f       	sbci	r25, 0xFF	; 255
 400:	99 23       	and	r25, r25
 402:	a9 f0       	breq	.+42     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 404:	f9 2f       	mov	r31, r25
 406:	96 e9       	ldi	r25, 0x96	; 150
 408:	bb 27       	eor	r27, r27
 40a:	93 95       	inc	r25
 40c:	f6 95       	lsr	r31
 40e:	87 95       	ror	r24
 410:	77 95       	ror	r23
 412:	67 95       	ror	r22
 414:	b7 95       	ror	r27
 416:	f1 11       	cpse	r31, r1
 418:	f8 cf       	rjmp	.-16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 41a:	fa f4       	brpl	.+62     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 41c:	bb 0f       	add	r27, r27
 41e:	11 f4       	brne	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 420:	60 ff       	sbrs	r22, 0
 422:	1b c0       	rjmp	.+54     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 424:	6f 5f       	subi	r22, 0xFF	; 255
 426:	7f 4f       	sbci	r23, 0xFF	; 255
 428:	8f 4f       	sbci	r24, 0xFF	; 255
 42a:	9f 4f       	sbci	r25, 0xFF	; 255
 42c:	16 c0       	rjmp	.+44     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 42e:	88 23       	and	r24, r24
 430:	11 f0       	breq	.+4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 432:	96 e9       	ldi	r25, 0x96	; 150
 434:	11 c0       	rjmp	.+34     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 436:	77 23       	and	r23, r23
 438:	21 f0       	breq	.+8      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43a:	9e e8       	ldi	r25, 0x8E	; 142
 43c:	87 2f       	mov	r24, r23
 43e:	76 2f       	mov	r23, r22
 440:	05 c0       	rjmp	.+10     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 442:	66 23       	and	r22, r22
 444:	71 f0       	breq	.+28     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 446:	96 e8       	ldi	r25, 0x86	; 134
 448:	86 2f       	mov	r24, r22
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	60 e0       	ldi	r22, 0x00	; 0
 44e:	2a f0       	brmi	.+10     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 450:	9a 95       	dec	r25
 452:	66 0f       	add	r22, r22
 454:	77 1f       	adc	r23, r23
 456:	88 1f       	adc	r24, r24
 458:	da f7       	brpl	.-10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 45a:	88 0f       	add	r24, r24
 45c:	96 95       	lsr	r25
 45e:	87 95       	ror	r24
 460:	97 f9       	bld	r25, 7
 462:	08 95       	ret

00000464 <__fp_inf>:
 464:	97 f9       	bld	r25, 7
 466:	9f 67       	ori	r25, 0x7F	; 127
 468:	80 e8       	ldi	r24, 0x80	; 128
 46a:	70 e0       	ldi	r23, 0x00	; 0
 46c:	60 e0       	ldi	r22, 0x00	; 0
 46e:	08 95       	ret

00000470 <__fp_nan>:
 470:	9f ef       	ldi	r25, 0xFF	; 255
 472:	80 ec       	ldi	r24, 0xC0	; 192
 474:	08 95       	ret

00000476 <__fp_pscA>:
 476:	00 24       	eor	r0, r0
 478:	0a 94       	dec	r0
 47a:	16 16       	cp	r1, r22
 47c:	17 06       	cpc	r1, r23
 47e:	18 06       	cpc	r1, r24
 480:	09 06       	cpc	r0, r25
 482:	08 95       	ret

00000484 <__fp_pscB>:
 484:	00 24       	eor	r0, r0
 486:	0a 94       	dec	r0
 488:	12 16       	cp	r1, r18
 48a:	13 06       	cpc	r1, r19
 48c:	14 06       	cpc	r1, r20
 48e:	05 06       	cpc	r0, r21
 490:	08 95       	ret

00000492 <__fp_round>:
 492:	09 2e       	mov	r0, r25
 494:	03 94       	inc	r0
 496:	00 0c       	add	r0, r0
 498:	11 f4       	brne	.+4      	; 0x49e <__fp_round+0xc>
 49a:	88 23       	and	r24, r24
 49c:	52 f0       	brmi	.+20     	; 0x4b2 <__fp_round+0x20>
 49e:	bb 0f       	add	r27, r27
 4a0:	40 f4       	brcc	.+16     	; 0x4b2 <__fp_round+0x20>
 4a2:	bf 2b       	or	r27, r31
 4a4:	11 f4       	brne	.+4      	; 0x4aa <__fp_round+0x18>
 4a6:	60 ff       	sbrs	r22, 0
 4a8:	04 c0       	rjmp	.+8      	; 0x4b2 <__fp_round+0x20>
 4aa:	6f 5f       	subi	r22, 0xFF	; 255
 4ac:	7f 4f       	sbci	r23, 0xFF	; 255
 4ae:	8f 4f       	sbci	r24, 0xFF	; 255
 4b0:	9f 4f       	sbci	r25, 0xFF	; 255
 4b2:	08 95       	ret

000004b4 <__fp_split3>:
 4b4:	57 fd       	sbrc	r21, 7
 4b6:	90 58       	subi	r25, 0x80	; 128
 4b8:	44 0f       	add	r20, r20
 4ba:	55 1f       	adc	r21, r21
 4bc:	59 f0       	breq	.+22     	; 0x4d4 <__fp_splitA+0x10>
 4be:	5f 3f       	cpi	r21, 0xFF	; 255
 4c0:	71 f0       	breq	.+28     	; 0x4de <__fp_splitA+0x1a>
 4c2:	47 95       	ror	r20

000004c4 <__fp_splitA>:
 4c4:	88 0f       	add	r24, r24
 4c6:	97 fb       	bst	r25, 7
 4c8:	99 1f       	adc	r25, r25
 4ca:	61 f0       	breq	.+24     	; 0x4e4 <__fp_splitA+0x20>
 4cc:	9f 3f       	cpi	r25, 0xFF	; 255
 4ce:	79 f0       	breq	.+30     	; 0x4ee <__fp_splitA+0x2a>
 4d0:	87 95       	ror	r24
 4d2:	08 95       	ret
 4d4:	12 16       	cp	r1, r18
 4d6:	13 06       	cpc	r1, r19
 4d8:	14 06       	cpc	r1, r20
 4da:	55 1f       	adc	r21, r21
 4dc:	f2 cf       	rjmp	.-28     	; 0x4c2 <__fp_split3+0xe>
 4de:	46 95       	lsr	r20
 4e0:	f1 df       	rcall	.-30     	; 0x4c4 <__fp_splitA>
 4e2:	08 c0       	rjmp	.+16     	; 0x4f4 <__fp_splitA+0x30>
 4e4:	16 16       	cp	r1, r22
 4e6:	17 06       	cpc	r1, r23
 4e8:	18 06       	cpc	r1, r24
 4ea:	99 1f       	adc	r25, r25
 4ec:	f1 cf       	rjmp	.-30     	; 0x4d0 <__fp_splitA+0xc>
 4ee:	86 95       	lsr	r24
 4f0:	71 05       	cpc	r23, r1
 4f2:	61 05       	cpc	r22, r1
 4f4:	08 94       	sec
 4f6:	08 95       	ret

000004f8 <__fp_zero>:
 4f8:	e8 94       	clt

000004fa <__fp_szero>:
 4fa:	bb 27       	eor	r27, r27
 4fc:	66 27       	eor	r22, r22
 4fe:	77 27       	eor	r23, r23
 500:	cb 01       	movw	r24, r22
 502:	97 f9       	bld	r25, 7
 504:	08 95       	ret

00000506 <__mulsf3>:
 506:	0b d0       	rcall	.+22     	; 0x51e <__mulsf3x>
 508:	c4 cf       	rjmp	.-120    	; 0x492 <__fp_round>
 50a:	b5 df       	rcall	.-150    	; 0x476 <__fp_pscA>
 50c:	28 f0       	brcs	.+10     	; 0x518 <__mulsf3+0x12>
 50e:	ba df       	rcall	.-140    	; 0x484 <__fp_pscB>
 510:	18 f0       	brcs	.+6      	; 0x518 <__mulsf3+0x12>
 512:	95 23       	and	r25, r21
 514:	09 f0       	breq	.+2      	; 0x518 <__mulsf3+0x12>
 516:	a6 cf       	rjmp	.-180    	; 0x464 <__fp_inf>
 518:	ab cf       	rjmp	.-170    	; 0x470 <__fp_nan>
 51a:	11 24       	eor	r1, r1
 51c:	ee cf       	rjmp	.-36     	; 0x4fa <__fp_szero>

0000051e <__mulsf3x>:
 51e:	ca df       	rcall	.-108    	; 0x4b4 <__fp_split3>
 520:	a0 f3       	brcs	.-24     	; 0x50a <__mulsf3+0x4>

00000522 <__mulsf3_pse>:
 522:	95 9f       	mul	r25, r21
 524:	d1 f3       	breq	.-12     	; 0x51a <__mulsf3+0x14>
 526:	95 0f       	add	r25, r21
 528:	50 e0       	ldi	r21, 0x00	; 0
 52a:	55 1f       	adc	r21, r21
 52c:	62 9f       	mul	r22, r18
 52e:	f0 01       	movw	r30, r0
 530:	72 9f       	mul	r23, r18
 532:	bb 27       	eor	r27, r27
 534:	f0 0d       	add	r31, r0
 536:	b1 1d       	adc	r27, r1
 538:	63 9f       	mul	r22, r19
 53a:	aa 27       	eor	r26, r26
 53c:	f0 0d       	add	r31, r0
 53e:	b1 1d       	adc	r27, r1
 540:	aa 1f       	adc	r26, r26
 542:	64 9f       	mul	r22, r20
 544:	66 27       	eor	r22, r22
 546:	b0 0d       	add	r27, r0
 548:	a1 1d       	adc	r26, r1
 54a:	66 1f       	adc	r22, r22
 54c:	82 9f       	mul	r24, r18
 54e:	22 27       	eor	r18, r18
 550:	b0 0d       	add	r27, r0
 552:	a1 1d       	adc	r26, r1
 554:	62 1f       	adc	r22, r18
 556:	73 9f       	mul	r23, r19
 558:	b0 0d       	add	r27, r0
 55a:	a1 1d       	adc	r26, r1
 55c:	62 1f       	adc	r22, r18
 55e:	83 9f       	mul	r24, r19
 560:	a0 0d       	add	r26, r0
 562:	61 1d       	adc	r22, r1
 564:	22 1f       	adc	r18, r18
 566:	74 9f       	mul	r23, r20
 568:	33 27       	eor	r19, r19
 56a:	a0 0d       	add	r26, r0
 56c:	61 1d       	adc	r22, r1
 56e:	23 1f       	adc	r18, r19
 570:	84 9f       	mul	r24, r20
 572:	60 0d       	add	r22, r0
 574:	21 1d       	adc	r18, r1
 576:	82 2f       	mov	r24, r18
 578:	76 2f       	mov	r23, r22
 57a:	6a 2f       	mov	r22, r26
 57c:	11 24       	eor	r1, r1
 57e:	9f 57       	subi	r25, 0x7F	; 127
 580:	50 40       	sbci	r21, 0x00	; 0
 582:	8a f0       	brmi	.+34     	; 0x5a6 <__mulsf3_pse+0x84>
 584:	e1 f0       	breq	.+56     	; 0x5be <__mulsf3_pse+0x9c>
 586:	88 23       	and	r24, r24
 588:	4a f0       	brmi	.+18     	; 0x59c <__mulsf3_pse+0x7a>
 58a:	ee 0f       	add	r30, r30
 58c:	ff 1f       	adc	r31, r31
 58e:	bb 1f       	adc	r27, r27
 590:	66 1f       	adc	r22, r22
 592:	77 1f       	adc	r23, r23
 594:	88 1f       	adc	r24, r24
 596:	91 50       	subi	r25, 0x01	; 1
 598:	50 40       	sbci	r21, 0x00	; 0
 59a:	a9 f7       	brne	.-22     	; 0x586 <__mulsf3_pse+0x64>
 59c:	9e 3f       	cpi	r25, 0xFE	; 254
 59e:	51 05       	cpc	r21, r1
 5a0:	70 f0       	brcs	.+28     	; 0x5be <__mulsf3_pse+0x9c>
 5a2:	60 cf       	rjmp	.-320    	; 0x464 <__fp_inf>
 5a4:	aa cf       	rjmp	.-172    	; 0x4fa <__fp_szero>
 5a6:	5f 3f       	cpi	r21, 0xFF	; 255
 5a8:	ec f3       	brlt	.-6      	; 0x5a4 <__mulsf3_pse+0x82>
 5aa:	98 3e       	cpi	r25, 0xE8	; 232
 5ac:	dc f3       	brlt	.-10     	; 0x5a4 <__mulsf3_pse+0x82>
 5ae:	86 95       	lsr	r24
 5b0:	77 95       	ror	r23
 5b2:	67 95       	ror	r22
 5b4:	b7 95       	ror	r27
 5b6:	f7 95       	ror	r31
 5b8:	e7 95       	ror	r30
 5ba:	9f 5f       	subi	r25, 0xFF	; 255
 5bc:	c1 f7       	brne	.-16     	; 0x5ae <__mulsf3_pse+0x8c>
 5be:	fe 2b       	or	r31, r30
 5c0:	88 0f       	add	r24, r24
 5c2:	91 1d       	adc	r25, r1
 5c4:	96 95       	lsr	r25
 5c6:	87 95       	ror	r24
 5c8:	97 f9       	bld	r25, 7
 5ca:	08 95       	ret

000005cc <__divmodhi4>:
 5cc:	97 fb       	bst	r25, 7
 5ce:	07 2e       	mov	r0, r23
 5d0:	16 f4       	brtc	.+4      	; 0x5d6 <__divmodhi4+0xa>
 5d2:	00 94       	com	r0
 5d4:	06 d0       	rcall	.+12     	; 0x5e2 <__divmodhi4_neg1>
 5d6:	77 fd       	sbrc	r23, 7
 5d8:	08 d0       	rcall	.+16     	; 0x5ea <__divmodhi4_neg2>
 5da:	0b d0       	rcall	.+22     	; 0x5f2 <__udivmodhi4>
 5dc:	07 fc       	sbrc	r0, 7
 5de:	05 d0       	rcall	.+10     	; 0x5ea <__divmodhi4_neg2>
 5e0:	3e f4       	brtc	.+14     	; 0x5f0 <__divmodhi4_exit>

000005e2 <__divmodhi4_neg1>:
 5e2:	90 95       	com	r25
 5e4:	81 95       	neg	r24
 5e6:	9f 4f       	sbci	r25, 0xFF	; 255
 5e8:	08 95       	ret

000005ea <__divmodhi4_neg2>:
 5ea:	70 95       	com	r23
 5ec:	61 95       	neg	r22
 5ee:	7f 4f       	sbci	r23, 0xFF	; 255

000005f0 <__divmodhi4_exit>:
 5f0:	08 95       	ret

000005f2 <__udivmodhi4>:
 5f2:	aa 1b       	sub	r26, r26
 5f4:	bb 1b       	sub	r27, r27
 5f6:	51 e1       	ldi	r21, 0x11	; 17
 5f8:	07 c0       	rjmp	.+14     	; 0x608 <__udivmodhi4_ep>

000005fa <__udivmodhi4_loop>:
 5fa:	aa 1f       	adc	r26, r26
 5fc:	bb 1f       	adc	r27, r27
 5fe:	a6 17       	cp	r26, r22
 600:	b7 07       	cpc	r27, r23
 602:	10 f0       	brcs	.+4      	; 0x608 <__udivmodhi4_ep>
 604:	a6 1b       	sub	r26, r22
 606:	b7 0b       	sbc	r27, r23

00000608 <__udivmodhi4_ep>:
 608:	88 1f       	adc	r24, r24
 60a:	99 1f       	adc	r25, r25
 60c:	5a 95       	dec	r21
 60e:	a9 f7       	brne	.-22     	; 0x5fa <__udivmodhi4_loop>
 610:	80 95       	com	r24
 612:	90 95       	com	r25
 614:	bc 01       	movw	r22, r24
 616:	cd 01       	movw	r24, r26
 618:	08 95       	ret

0000061a <_exit>:
 61a:	f8 94       	cli

0000061c <__stop_program>:
 61c:	ff cf       	rjmp	.-2      	; 0x61c <__stop_program>
